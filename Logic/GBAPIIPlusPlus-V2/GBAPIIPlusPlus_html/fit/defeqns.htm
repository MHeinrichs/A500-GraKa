<html><head><link type='text/css' href='style.css' rel='stylesheet'></head><body class='pgBgnd'>
<h3 align='center'>Equations</h3>
<table width='90%' align='center' border='1' cellpadding='0' cellspacing='0'>
<tr><td>
</td></tr><tr><td>
********** Mapped Logic **********
</td></tr><tr><td>
</td></tr><tr><td>
$OpTx$$OpTx$FX_DC$27_INV$210 <= (NOT ioAdrHit AND NOT memAdrHit);
</td></tr><tr><td>
</td></tr><tr><td>
$OpTx$FX_DC$63 <= NOT (A(23)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	 XOR 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$OpTx$FX_DC$63 <= NOT (memSpace(2));
</td></tr><tr><td>
FDCPE_AC_D0: FDCPE port map (AC_D0,autoConfigAdrHit,mclk,NOT reset,'0');
</td></tr><tr><td>
FDCPE_AC_D1: FDCPE port map (AC_D1,AC_D0,mclk,NOT reset,'0');
</td></tr><tr><td>
FDCPE_BALE: FDCPE port map (BALE,BALE_D,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BALE_D <= ((NOT IO(3) AND NOT vgaStatemachine_FSM_FFd3 AND ioAdrHit)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT IO(3) AND NOT vgaStatemachine_FSM_FFd3 AND memAdrHit)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT IO(3) AND NOT vgaStatemachine_FSM_FFd3 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3 AND NOT vgaStatemachine_FSM_FFd15));
</td></tr><tr><td>
FDCPE_CFGOUT: FDCPE port map (CFGOUT,NOT autoconfigDone_FSM_FFd1,AS,'0',NOT reset);
</td></tr><tr><td>
</td></tr><tr><td>
CLRG <= reset;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(0) <= NOT (((NOT RW AND NOT DA_R(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND NOT DA_R(0))));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(0) <= DA_I(0) when DA_OE(0) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(0) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(1) <= ((NOT RW AND DA_R(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(1)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(1) <= DA_I(1) when DA_OE(1) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(1) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(2) <= ((NOT RW AND DA_R(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(2)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(2) <= DA_I(2) when DA_OE(2) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(2) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(3) <= ((NOT RW AND DA_R(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(3)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(3) <= DA_I(3) when DA_OE(3) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(3) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(4) <= ((NOT RW AND DA_R(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(4)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(4) <= DA_I(4) when DA_OE(4) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(4) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(5) <= ((NOT RW AND DA_R(5))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(5)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(5) <= DA_I(5) when DA_OE(5) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(5) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(6) <= ((NOT RW AND DA_R(6))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(6)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(6) <= DA_I(6) when DA_OE(6) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(6) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(7) <= ((NOT RW AND DA_R(7))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(7)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(7) <= DA_I(7) when DA_OE(7) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(7) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(8) <= ((NOT RW AND DA_R(8))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(8)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(8) <= DA_I(8) when DA_OE(8) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(8) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(9) <= ((NOT RW AND DA_R(9))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(9)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(9) <= DA_I(9) when DA_OE(9) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(9) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(10) <= ((NOT RW AND DA_R(10))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(10)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(10) <= DA_I(10) when DA_OE(10) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(10) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(11) <= ((NOT RW AND DA_R(11))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(11)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(11) <= DA_I(11) when DA_OE(11) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(11) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(12) <= ((NOT RW AND DA_R(12))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND autoConfigAdrHit AND autoConfigDataOut(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND AC_D1 AND autoConfigDataOut(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(12)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(12) <= DA_I(12) when DA_OE(12) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(12) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(13) <= ((NOT RW AND DA_R(13))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND autoConfigAdrHit AND autoConfigDataOut(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND AC_D1 AND autoConfigDataOut(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(13)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(13) <= DA_I(13) when DA_OE(13) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(13) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(14) <= ((NOT RW AND DA_R(14))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND autoConfigAdrHit AND autoConfigDataOut(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND AC_D1 AND autoConfigDataOut(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(14)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(14) <= DA_I(14) when DA_OE(14) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(14) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_I(15) <= ((NOT RW AND DA_R(15))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND autoConfigAdrHit AND autoConfigDataOut(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND AC_D1 AND autoConfigDataOut(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoConfigAdrHit AND NOT AC_D1 AND DA_R(15)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA(15) <= DA_I(15) when DA_OE(15) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_OE(15) <= NOT DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT;
</td></tr><tr><td>
</td></tr><tr><td>
DA_9_IOBUFE/DA_9_IOBUFE_TRST__$INT <= ((NOT RW)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioAdrHit AND NOT memAdrHit AND NOT autoConfigAdrHit AND NOT AC_D1 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT VGA_D1));
</td></tr><tr><td>
FDCPE_DA_R0: FDCPE port map (DA_R(0),DA_R_D(0),mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(0) <= ((NOT RW AND DA_R(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(0).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(0).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(0)));
</td></tr><tr><td>
FDCPE_DA_R1: FDCPE port map (DA_R(1),DA_R_D(1),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(1) <= ((NOT RW AND DA_R(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(1).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(1).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(1)));
</td></tr><tr><td>
FDCPE_DA_R2: FDCPE port map (DA_R(2),DA_R_D(2),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(2) <= ((NOT RW AND DA_R(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(2).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(2).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(2)));
</td></tr><tr><td>
FDCPE_DA_R3: FDCPE port map (DA_R(3),DA_R_D(3),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(3) <= ((NOT RW AND DA_R(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(3).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(3).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(3)));
</td></tr><tr><td>
FDCPE_DA_R4: FDCPE port map (DA_R(4),DA_R_D(4),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(4) <= ((NOT RW AND DA_R(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(4).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(4).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(4)));
</td></tr><tr><td>
FDCPE_DA_R5: FDCPE port map (DA_R(5),DA_R_D(5),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(5) <= ((NOT RW AND DA_R(5))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(5).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(5).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(5)));
</td></tr><tr><td>
FDCPE_DA_R6: FDCPE port map (DA_R(6),DA_R_D(6),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(6) <= ((NOT RW AND DA_R(6))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(6).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(6).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(6)));
</td></tr><tr><td>
FDCPE_DA_R7: FDCPE port map (DA_R(7),DA_R_D(7),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(7) <= ((NOT RW AND DA_R(7))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(7).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(7).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(7)));
</td></tr><tr><td>
FDCPE_DA_R8: FDCPE port map (DA_R(8),DA_R_D(8),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(8) <= ((NOT RW AND DA_R(8))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(8).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(8).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(8)));
</td></tr><tr><td>
FDCPE_DA_R9: FDCPE port map (DA_R(9),DA_R_D(9),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(9) <= ((NOT RW AND DA_R(9))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(9).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(9).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(9)));
</td></tr><tr><td>
FDCPE_DA_R10: FDCPE port map (DA_R(10),DA_R_D(10),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(10) <= ((NOT RW AND DA_R(10))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(10).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(10).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(10)));
</td></tr><tr><td>
FDCPE_DA_R11: FDCPE port map (DA_R(11),DA_R_D(11),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(11) <= ((NOT RW AND DA_R(11))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(11).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(11).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(11)));
</td></tr><tr><td>
FDCPE_DA_R12: FDCPE port map (DA_R(12),DA_R_D(12),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(12) <= ((NOT RW AND DA_R(12))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(12).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(12).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(12)));
</td></tr><tr><td>
FDCPE_DA_R13: FDCPE port map (DA_R(13),DA_R_D(13),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(13) <= ((NOT RW AND DA_R(13))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(13).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(13).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(13)));
</td></tr><tr><td>
FDCPE_DA_R14: FDCPE port map (DA_R(14),DA_R_D(14),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(14) <= ((NOT RW AND DA_R(14))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(14).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(14).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(14)));
</td></tr><tr><td>
FDCPE_DA_R15: FDCPE port map (DA_R(15),DA_R_D(15),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DA_R_D(15) <= ((NOT RW AND DA_R(15))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd5 AND DG(15).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND vgaStatemachine_FSM_FFd6 AND DG(15).PIN)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd6 AND DA_R(15)));
</td></tr><tr><td>
FDCPE_DG0: FDCPE port map (DG_I(0),DG(0),mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(0) <= ((NOT DG(0) AND RW AND NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT DG(0) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3 AND NOT DA(0).PIN));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(0) <= DG_I(0) when DG_OE(0) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(0) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG1: FDCPE port map (DG_I(1),DG(1),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(1) <= ((DG(1) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(1) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd12 AND DA(1).PIN));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(1) <= DG_I(1) when DG_OE(1) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(1) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG2: FDCPE port map (DG_I(2),DG(2),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(2) <= ((DG(2) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(2) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd12 AND DA(2).PIN));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(2) <= DG_I(2) when DG_OE(2) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(2) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG3: FDCPE port map (DG_I(3),DG(3),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(3) <= ((DG(3) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(3) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd12 AND DA(3).PIN));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(3) <= DG_I(3) when DG_OE(3) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(3) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG4: FDCPE port map (DG_I(4),DG(4),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(4) <= ((DG(4) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(4) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd12 AND DA(4).PIN));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(4) <= DG_I(4) when DG_OE(4) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(4) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG5: FDCPE port map (DG_I(5),DG(5),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(5) <= ((DG(5) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(5) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd12 AND DA(5).PIN));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(5) <= DG_I(5) when DG_OE(5) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(5) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG6: FDCPE port map (DG_I(6),DG(6),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(6) <= ((DG(6) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(6) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd12 AND DA(6).PIN));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(6) <= DG_I(6) when DG_OE(6) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(6) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG7: FDCPE port map (DG_I(7),DG(7),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(7) <= ((DG(7) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(7) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd12 AND DA(7).PIN));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(7) <= DG_I(7) when DG_OE(7) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(7) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG8: FDCPE port map (DG_I(8),DG(8),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(8) <= ((DG(8) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(8) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND DA(8).PIN AND vgaStatemachine_FSM_FFd12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(8) <= DG_I(8) when DG_OE(8) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(8) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG9: FDCPE port map (DG_I(9),DG(9),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(9) <= ((DG(9) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(9) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND DA(9).PIN AND vgaStatemachine_FSM_FFd12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(9) <= DG_I(9) when DG_OE(9) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(9) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG10: FDCPE port map (DG_I(10),DG(10),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(10) <= ((DG(10) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(10) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND DA(10).PIN AND vgaStatemachine_FSM_FFd12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(10) <= DG_I(10) when DG_OE(10) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(10) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG11: FDCPE port map (DG_I(11),DG(11),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(11) <= ((DG(11) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(11) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND DA(11).PIN AND vgaStatemachine_FSM_FFd12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(11) <= DG_I(11) when DG_OE(11) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(11) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG12: FDCPE port map (DG_I(12),DG(12),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(12) <= ((DG(12) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(12) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND DA(12).PIN AND vgaStatemachine_FSM_FFd12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(12) <= DG_I(12) when DG_OE(12) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(12) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG13: FDCPE port map (DG_I(13),DG(13),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(13) <= ((DG(13) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(13) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND DA(13).PIN AND vgaStatemachine_FSM_FFd12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(13) <= DG_I(13) when DG_OE(13) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(13) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG14: FDCPE port map (DG_I(14),DG(14),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(14) <= ((DG(14) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(14) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND DA(14).PIN AND vgaStatemachine_FSM_FFd12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(14) <= DG_I(14) when DG_OE(14) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(14) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
FDCPE_DG15: FDCPE port map (DG_I(15),DG(15),mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(15) <= ((DG(15) AND RW AND vgaStatemachine_FSM_FFd12)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (DG(15) AND NOT vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND DA(15).PIN AND vgaStatemachine_FSM_FFd12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG(15) <= DG_I(15) when DG_OE(15) = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DG_OE(15) <= (NOT RW AND NOT $OpTx$$OpTx$FX_DC$27_INV$210);
</td></tr><tr><td>
</td></tr><tr><td>
DTACK_I <= '0';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DTACK <= DTACK_I when DTACK_OE = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DTACK_OE <= NOT ((NOT autoConfigAdrHit AND sigDTACK));
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
FTCPE_IO3: FTCPE port map (IO(3),IO_T(3),mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IO_T(3) <= ((NOT IO(3) AND vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (IO(3) AND vgaStatemachine_FSM_FFd12 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd3 AND NOT vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT IO(3) AND NOT ioAdrHit AND NOT memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd15));
</td></tr><tr><td>
FTCPE_IOR: FTCPE port map (IOR,IOR_T,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IOR_T <= ((NOT IOR AND vgaStatemachine_FSM_FFd4)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND NOT IOR AND NOT ioAdrHit AND vgaStatemachine_FSM_FFd10)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT IOR AND NOT ioAdrHit AND NOT memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND IOR AND ioAdrHit AND NOT vgaStatemachine_FSM_FFd15 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd10 AND NOT vgaStatemachine_FSM_FFd4));
</td></tr><tr><td>
FTCPE_IOW: FTCPE port map (IOW,IOW_T,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IOW_T <= ((NOT IOW AND vgaStatemachine_FSM_FFd5)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND NOT IOW AND NOT ioAdrHit AND vgaStatemachine_FSM_FFd10)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT IOW AND NOT ioAdrHit AND NOT memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND IOW AND NOT vgaStatemachine_FSM_FFd5 AND ioAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd15 AND vgaStatemachine_FSM_FFd10));
</td></tr><tr><td>
FTCPE_MEMR: FTCPE port map (MEMR,MEMR_T,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MEMR_T <= ((NOT MEMR AND vgaStatemachine_FSM_FFd4)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND NOT MEMR AND NOT memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd10)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT MEMR AND NOT ioAdrHit AND NOT memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RW AND MEMR AND memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd15 AND vgaStatemachine_FSM_FFd10 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd4));
</td></tr><tr><td>
FTCPE_MEMW: FTCPE port map (MEMW,MEMW_T,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MEMW_T <= ((NOT MEMW AND vgaStatemachine_FSM_FFd5)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND NOT MEMW AND NOT memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd10)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT MEMW AND NOT ioAdrHit AND NOT memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND MEMW AND NOT vgaStatemachine_FSM_FFd5 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	memAdrHit AND NOT vgaStatemachine_FSM_FFd15 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd10));
</td></tr><tr><td>
FTCPE_MONISW: FTCPE port map (MONISW,MONISW_T,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MONISW_T <= ((NOT RW AND A(12) AND NOT MONISW AND ioAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd10 AND NOT UDS AND A(15))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND A(12) AND NOT MONISW AND ioAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd10 AND NOT LDS AND A(15))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND NOT A(12) AND MONISW AND ioAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd10 AND NOT UDS AND A(15))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND NOT A(12) AND MONISW AND ioAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd10 AND NOT LDS AND A(15)));
</td></tr><tr><td>
</td></tr><tr><td>
OVR_I <= '0';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OVR <= OVR_I when OVR_OE = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OVR_OE <= NOT ((NOT ioAdrHit AND NOT memAdrHit AND NOT autoConfigAdrHit));
</td></tr><tr><td>
FDCPE_SA0: FDCPE port map (SA0,SA0_D,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SA0_D <= ((NOT SA0 AND NOT vgaStatemachine_FSM_FFd3 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd13)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT SA0 AND NOT vgaStatemachine_FSM_FFd3 AND NOT ioAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT memAdrHit)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT vgaStatemachine_FSM_FFd3 AND memAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd13 AND NOT UDS)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(12) AND NOT vgaStatemachine_FSM_FFd3 AND ioAdrHit AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd13 AND NOT UDS));
</td></tr><tr><td>
FDCPE_SA12: FDCPE port map (SA12,SA12_D,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SA12_D <= ((vgaStatemachine_FSM_FFd3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SA12 AND NOT vgaStatemachine_FSM_FFd13)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (A(12) AND memAdrHit AND vgaStatemachine_FSM_FFd13)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SA12 AND NOT ioAdrHit AND NOT memAdrHit));
</td></tr><tr><td>
</td></tr><tr><td>
SLAVE <= (NOT ioAdrHit AND NOT memAdrHit AND NOT autoConfigAdrHit);
</td></tr><tr><td>
FDCPE_VGA_D0: FDCPE port map (VGA_D0,VGA_D0_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VGA_D0_D <= (NOT ioAdrHit AND NOT memAdrHit);
</td></tr><tr><td>
FDCPE_VGA_D1: FDCPE port map (VGA_D1,VGA_D0,mclk,NOT reset,'0');
</td></tr><tr><td>
</td></tr><tr><td>
XRDYD_I <= '0';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XRDYD <= XRDYD_I when XRDYD_OE = '1' else 'Z';
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XRDYD_OE <= '0';
</td></tr><tr><td>
FDCPE_autoConfigAdrDSHit: FDCPE port map (autoConfigAdrDSHit,autoConfigAdrDSHit_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigAdrDSHit_D <= ((BERR AND NOT AS AND NOT autoconfigDone_FSM_FFd2 AND A(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(22) AND A(21) AND A(19) AND NOT CFGIN AND NOT A(20) AND NOT A(18) AND ds AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(16) AND NOT A(17))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (BERR AND NOT AS AND NOT autoconfigDone_FSM_FFd1 AND A(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(22) AND A(21) AND A(19) AND NOT CFGIN AND NOT A(20) AND NOT A(18) AND ds AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(16) AND NOT A(17)));
</td></tr><tr><td>
FDCPE_autoConfigAdrHit: FDCPE port map (autoConfigAdrHit,autoConfigAdrHit_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigAdrHit_D <= ((BERR AND NOT AS AND NOT autoconfigDone_FSM_FFd2 AND A(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(22) AND A(21) AND A(19) AND NOT CFGIN AND NOT A(20) AND NOT A(18) AND NOT A(16) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(17))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (BERR AND NOT AS AND NOT autoconfigDone_FSM_FFd1 AND A(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(22) AND A(21) AND A(19) AND NOT CFGIN AND NOT A(20) AND NOT A(18) AND NOT A(16) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(17)));
</td></tr><tr><td>
FDCPE_autoConfigDataOut0: FDCPE port map (autoConfigDataOut(0),autoConfigDataOut_D(0),autoConfigAdrDSHit,'0','0',autoConfigDataOut_CE(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigDataOut_D(0) <= ((NOT autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND NOT A(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (autoconfigDone_FSM_FFd2 AND NOT A(5) AND A(2) AND NOT A(6) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND A(4) AND A(2) AND A(1) AND NOT A(6))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND NOT A(4) AND NOT A(2) AND A(6) AND NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND NOT A(4) AND NOT A(1) AND NOT A(6) AND NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND A(2) AND NOT A(1) AND NOT A(6) AND NOT A(3)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigDataOut_CE(0) <= (reset AND RW);
</td></tr><tr><td>
FDCPE_autoConfigDataOut1: FDCPE port map (autoConfigDataOut(1),autoConfigDataOut_D(1),autoConfigAdrDSHit,'0','0',autoConfigDataOut_CE(1));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigDataOut_D(1) <= ((autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND NOT A(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND A(4) AND A(2) AND A(1) AND NOT A(6))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND A(4) AND A(2) AND NOT A(6) AND NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND NOT A(4) AND NOT A(2) AND NOT A(1) AND NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND NOT A(4) AND NOT A(2) AND A(6) AND NOT A(3)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigDataOut_CE(1) <= (reset AND RW);
</td></tr><tr><td>
FDCPE_autoConfigDataOut2: FDCPE port map (autoConfigDataOut(2),autoConfigDataOut_D(2),autoConfigAdrDSHit,'0','0',autoConfigDataOut_CE(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigDataOut_D(2) <= ((NOT A(5) AND A(4) AND A(2) AND NOT A(6) AND NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND NOT A(4) AND NOT A(2) AND A(6) AND NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND NOT A(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(1) AND NOT A(3)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigDataOut_CE(2) <= (reset AND RW);
</td></tr><tr><td>
FDCPE_autoConfigDataOut3: FDCPE port map (autoConfigDataOut(3),autoConfigDataOut_D(3),autoConfigAdrDSHit,'0','0',autoConfigDataOut_CE(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigDataOut_D(3) <= ((NOT A(5) AND NOT A(4) AND NOT A(2) AND A(6) AND NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(2) AND A(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(6) AND NOT A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT A(5) AND A(4) AND NOT A(2) AND A(1) AND NOT A(6) AND NOT A(3)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoConfigDataOut_CE(3) <= (reset AND RW);
</td></tr><tr><td>
FTCPE_autoconfigDone_FSM_FFd1: FTCPE port map (autoconfigDone_FSM_FFd1,autoconfigDone_FSM_FFd1_T,autoConfigAdrDSHit,NOT reset,'0',NOT RW);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoconfigDone_FSM_FFd1_T <= ((autoconfigDone_FSM_FFd2 AND NOT autoconfigDone_FSM_FFd1 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(5) AND NOT A(4) AND NOT A(1) AND A(6) AND A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoconfigDone_FSM_FFd1 AND NOT A(5) AND NOT A(4) AND A(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(1) AND A(6) AND A(3)));
</td></tr><tr><td>
FTCPE_autoconfigDone_FSM_FFd2: FTCPE port map (autoconfigDone_FSM_FFd2,autoconfigDone_FSM_FFd2_T,autoConfigAdrDSHit,NOT reset,'0',NOT RW);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoconfigDone_FSM_FFd2_T <= ((NOT autoconfigDone_FSM_FFd2 AND autoconfigDone_FSM_FFd1)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND NOT A(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(6) AND A(3)));
</td></tr><tr><td>
FDCPE_ds: FDCPE port map (ds,ds_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ds_D <= (UDS AND LDS);
</td></tr><tr><td>
FDCPE_ioAdrHit: FDCPE port map (ioAdrHit,ioAdrHit_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioAdrHit_D <= ((NOT BERR)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (AS)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (shutUp)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (EXP10_.EXP)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (ioSpace(0) AND NOT A(16))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioSpace(0) AND A(16))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (ioSpace(3) AND NOT A(19))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioSpace(3) AND A(19))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (ioSpace(7) AND NOT A(23))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (EXP13_.EXP)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (ioSpace(2) AND NOT A(18))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioSpace(2) AND A(18))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (ioSpace(6) AND NOT A(22))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioSpace(6) AND A(22))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioSpace(7) AND A(23))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (ioSpace(5) AND NOT A(21))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioSpace(5) AND A(21)));
</td></tr><tr><td>
FDCPE_ioSpace0: FDCPE port map (ioSpace(0),DA(8).PIN,autoConfigAdrDSHit,'0',NOT reset,ioSpace_CE(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioSpace_CE(0) <= (NOT RW AND autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_ioSpace1: FDCPE port map (ioSpace(1),DA(9).PIN,autoConfigAdrDSHit,'0',NOT reset,ioSpace_CE(1));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioSpace_CE(1) <= (NOT RW AND autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_ioSpace2: FDCPE port map (ioSpace(2),DA(10).PIN,autoConfigAdrDSHit,'0',NOT reset,ioSpace_CE(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioSpace_CE(2) <= (NOT RW AND autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_ioSpace3: FDCPE port map (ioSpace(3),DA(11).PIN,autoConfigAdrDSHit,'0',NOT reset,ioSpace_CE(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioSpace_CE(3) <= (NOT RW AND autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_ioSpace4: FDCPE port map (ioSpace(4),DA(12).PIN,autoConfigAdrDSHit,'0',NOT reset,ioSpace_CE(4));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioSpace_CE(4) <= (NOT RW AND autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_ioSpace5: FDCPE port map (ioSpace(5),DA(13).PIN,autoConfigAdrDSHit,'0',NOT reset,ioSpace_CE(5));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioSpace_CE(5) <= (NOT RW AND autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_ioSpace6: FDCPE port map (ioSpace(6),DA(14).PIN,autoConfigAdrDSHit,'0',NOT reset,ioSpace_CE(6));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioSpace_CE(6) <= (NOT RW AND autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_ioSpace7: FDCPE port map (ioSpace(7),DA(15).PIN,autoConfigAdrDSHit,'0',NOT reset,ioSpace_CE(7));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ioSpace_CE(7) <= (NOT RW AND autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_memAdrHit: FDCPE port map (memAdrHit,memAdrHit_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memAdrHit_D <= ((NOT BERR)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (AS)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (shutUp)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT memSpace(0) AND A(21))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (memSpace(1) AND NOT A(22))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT memSpace(1) AND A(22))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoconfigDone_FSM_FFd2 AND A(23) AND A(22) AND A(21) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(19) AND NOT CFGIN AND NOT A(20) AND NOT A(18) AND NOT A(16) AND NOT A(17))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT autoconfigDone_FSM_FFd1 AND A(23) AND A(22) AND A(21) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(19) AND NOT CFGIN AND NOT A(20) AND NOT A(18) AND NOT A(16) AND NOT A(17))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (memSpace(0) AND NOT A(21))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (memSpace(2) AND NOT A(23))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT memSpace(2) AND A(23)));
</td></tr><tr><td>
FDCPE_memSpace0: FDCPE port map (memSpace(0),DA(13).PIN,autoConfigAdrDSHit,'0',NOT reset,memSpace_CE(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memSpace_CE(0) <= (NOT RW AND NOT autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_memSpace1: FDCPE port map (memSpace(1),DA(14).PIN,autoConfigAdrDSHit,'0',NOT reset,memSpace_CE(1));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memSpace_CE(1) <= (NOT RW AND NOT autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FDCPE_memSpace2: FDCPE port map (memSpace(2),DA(15).PIN,autoConfigAdrDSHit,'0',NOT reset,memSpace_CE(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memSpace_CE(2) <= (NOT RW AND NOT autoconfigDone_FSM_FFd2 AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3));
</td></tr><tr><td>
FTCPE_shutUp: FTCPE port map (shutUp,shutUp_T,autoConfigAdrDSHit,'0',NOT reset,NOT RW);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shutUp_T <= ((NOT shutUp AND NOT A(5) AND NOT A(4) AND A(2) AND NOT A(1) AND A(6) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	A(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (autoconfigDone_FSM_FFd2 AND shutUp AND NOT A(5) AND NOT A(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT A(2) AND NOT A(1) AND A(6) AND A(3)));
</td></tr><tr><td>
FTCPE_sigDTACK: FTCPE port map (sigDTACK,sigDTACK_T,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sigDTACK_T <= ((vgaStatemachine_FSM_FFd6 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd15 AND sigDTACK AND NOT vgaStatemachine_FSM_FFd1)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioAdrHit AND NOT memAdrHit AND vgaStatemachine_FSM_FFd15 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT sigDTACK)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioAdrHit AND NOT memAdrHit AND NOT sigDTACK AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	vgaStatemachine_FSM_FFd1));
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd1: FDCPE port map (vgaStatemachine_FSM_FFd1,vgaStatemachine_FSM_FFd1_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vgaStatemachine_FSM_FFd1_D <= ((NOT vgaStatemachine_FSM_FFd1 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT vgaStatemachine_FSM_FFd2)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioAdrHit AND NOT memAdrHit AND NOT vgaStatemachine_FSM_FFd2));
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd10: FDCPE port map (vgaStatemachine_FSM_FFd10,vgaStatemachine_FSM_FFd12,mclk,NOT reset,'0');
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd11: FDCPE port map (vgaStatemachine_FSM_FFd11,vgaStatemachine_FSM_FFd11_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vgaStatemachine_FSM_FFd11_D <= (RW AND vgaStatemachine_FSM_FFd13);
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd12: FDCPE port map (vgaStatemachine_FSM_FFd12,vgaStatemachine_FSM_FFd12_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vgaStatemachine_FSM_FFd12_D <= ((vgaStatemachine_FSM_FFd11)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT RW AND vgaStatemachine_FSM_FFd13));
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd13: FDCPE port map (vgaStatemachine_FSM_FFd13,vgaStatemachine_FSM_FFd13_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vgaStatemachine_FSM_FFd13_D <= (ds AND vgaStatemachine_FSM_FFd14);
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd14: FDCPE port map (vgaStatemachine_FSM_FFd14,vgaStatemachine_FSM_FFd14_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vgaStatemachine_FSM_FFd14_D <= ((ioAdrHit AND vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (memAdrHit AND vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ds AND vgaStatemachine_FSM_FFd14));
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd15: FDCPE port map (vgaStatemachine_FSM_FFd15,vgaStatemachine_FSM_FFd15_D,mclk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vgaStatemachine_FSM_FFd15_D <= ((NOT ioAdrHit AND NOT memAdrHit AND vgaStatemachine_FSM_FFd15)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioAdrHit AND NOT memAdrHit AND vgaStatemachine_FSM_FFd1));
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd2: FDCPE port map (vgaStatemachine_FSM_FFd2,vgaStatemachine_FSM_FFd3,mclk,NOT reset,'0');
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd3: FDCPE port map (vgaStatemachine_FSM_FFd3,vgaStatemachine_FSM_FFd4,mclk,NOT reset,'0');
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd4: FDCPE port map (vgaStatemachine_FSM_FFd4,vgaStatemachine_FSM_FFd5,mclk,NOT reset,'0');
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd5: FDCPE port map (vgaStatemachine_FSM_FFd5,vgaStatemachine_FSM_FFd6,mclk,NOT reset,'0');
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd6: FDCPE port map (vgaStatemachine_FSM_FFd6,vgaStatemachine_FSM_FFd6_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vgaStatemachine_FSM_FFd6_D <= ((ioAdrHit AND vgaStatemachine_FSM_FFd7)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (vgaStatemachine_FSM_FFd7 AND WAIT));
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd7: FDCPE port map (vgaStatemachine_FSM_FFd7,vgaStatemachine_FSM_FFd7_D,mclk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vgaStatemachine_FSM_FFd7_D <= ((vgaStatemachine_FSM_FFd8)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT ioAdrHit AND vgaStatemachine_FSM_FFd7 AND NOT WAIT));
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd8: FDCPE port map (vgaStatemachine_FSM_FFd8,vgaStatemachine_FSM_FFd9,mclk,NOT reset,'0');
</td></tr><tr><td>
FDCPE_vgaStatemachine_FSM_FFd9: FDCPE port map (vgaStatemachine_FSM_FFd9,vgaStatemachine_FSM_FFd10,mclk,NOT reset,'0');
</td></tr><tr><td>
Register Legend:
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FDCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FTCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LDCP  (Q,D,G,CLR,PRE); 
</td></tr><tr><td>
</td></tr>
</table>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
